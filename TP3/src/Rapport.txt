Q1: On peut utiliser une atténuation en fonction de la distance, comme prévu
    dans le modèle d'illumination, afin de produire l'image de droite
    affichée dans la figure 14. Dites comment vous implanteriez cette
    atténuation dans les nuanceurs. Quels sont les énoncés que vous
    ajouteriez ou modifierez ? À quel endroit et dans quel(s) nuanceur(s) ?
    Votre méthode devrait s'appliquer autant pour l'illumination avec
    Gouraud ou avec Phong.

Afin de créer de l'attenuation, il faut multiplier la composante couleur
par un float compris entre 0 et 1 (un pourcentage en somme), au niveau 
du nuanceur de sommets. Ce float que l'on appelera "attenuation" correspond
à un sur la distance séparant le sommet de la source de lumière. Ainsi, 
si la source de lumière est collé au sommet la lumière réfléchis est de 100%
et diminue de façon linéaire au fur et à mesure que la source lumineuse 
s'éloigne du sommet.

float attenuation = 1.0 // Compris entre 0.0 et 1.0
vec4 calculerReflexion(......) {
	// Calculs de la réflexion
	.......
	return frontColor * attenuation;
}

Q2: Vous avez probablement remarqué que même en demandant un très grand
    niveau de tessellation, le générateur de tessellation ne produira pas
    une tessellation plus fine que le niveau maximum donné par la constante
    GL_MAX_TESS_GEN_LEVEL.  (On peut obtenir la valeur de cette constante
    avec glGet() et elle doit être au moins 64.)
    Que doit-on alors faire si on veut, malgré tout, une tessellation deux
    fois plus fine dans chaque direction?

Si on veut une tessellation deux fois plus fine dans chaque direction, il faudrait
ajouter des sommets pour avoir plus de polygones dans notre nuanceur de tesselation.